#
# This action does the following:
# 1) Creates a new release containing the repository source code, tagging the
#    release with an appropriate version tag, and publishing it on the GitHub project
#    page
# 2) Build a docker container image, tagging the release with an appropriate version tag,
#    and publishing it on the GitHub project page
# 3) Build an apptainer container image, tagging the release with an appropriate version tag,
#    and publishing it on the GitHub project page
# 4) If the version tag for an image matches the regex '^v[0-9]+\.[0-9]+\.[0-9]+$', i.e. it
#    corresponds to a 'release' version, then additionally tag the container image with the
#    'latest' tag and publish it on the GitHub project page. Note that this applies to
#    both docker and apptainer images
#
#
# Notes:
# - The version number is incremented every release as described in
#   https://github.com/mathieudutour/github-tag-action. Note that by default semantic
#   version numbers are used and the patch number is incremented every release.
#   Moreover, in accordance with Angular conventional commits convention, the minor or
#   major number is incremented only upon detection of commits in the history with
#   certain formats. E.g. a commit beginning with 'feat:', signifying a new feature,
#   would result in the minor number being incremented. For details on the expected
#   format of commit messages in this regard see
#   https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular.
#

name: tag-container-push
run-name: tag-container-push

on:
  workflow_call:
  
jobs:
  tag-container-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo but not submodule
        uses: actions/checkout@v4
        with:
          submodules: false  # default, just to be explicit
      # Checkout the Metadise source code repo which is a git submodule.
      # The METADISE_SOURCE_PULL_TOKEN is the PAT with read permission
      # required to pull from the Metadise source code repo.
      - name: Pull Metadise source code submodule
        run: |
        # Add the PAT to the URL for the submodule to authorise the pull
        sed -i "s|https://|https://${METADISE_SOURCE_PULL_TOKEN}@|" .gitmodules
        # Pull the submodule
        git submodule update --init
        env:
          METADISE_SOURCE_PULL_TOKEN: ${{ secrets.METADISE_SOURCE_PULL_TOKEN }}
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Setup docker auth
        run: |
          cat <<EOF > ~/.docker/config.json
          {
            "auths": {
              "ghcr.io": {
                "auth": "$(echo -n "$GIT_USERNAME:$GIT_PASSWORD" | base64 -w0)"
              }
            }
          }
          EOF
        env: # needed to authenticate to github and download the repo
          GIT_USERNAME: ${{ github.actor }}
          GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image with version tags
        env:
          # Note that this is the name of the image *without the tag*
          DOCKER_IMAGE_NAME: "ghcr.io/psdi-uk/metadise-container/metadise"
          TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: |
          docker build -t $DOCKER_IMAGE_NAME:$TAG .
          docker push $DOCKER_IMAGE_NAME:$TAG
          if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Detected $TAG corresponds to a release version. Assigning image 'latest' tag"
            docker tag $DOCKER_IMAGE_NAME:$TAG $DOCKER_IMAGE_NAME:latest
            docker push $DOCKER_IMAGE_NAME:latest
          fi
      - name: Install Apptainer
        run: |
          sudo apt install -y software-properties-common
          sudo add-apt-repository -y ppa:apptainer/ppa
          sudo apt install -y apptainer
          apptainer --version
      - name: Build Apptainer image from the Docker image and push with version tags
        env:
          # Note that these are the names of the images *without the tag*
          DOCKER_IMAGE_NAME: "ghcr.io/psdi-uk/metadise-container/metadise"
          APPTAINER_IMAGE_NAME: "ghcr.io/psdi-uk/metadise-container/metadise-sif"
          TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: |
          apptainer build container.sif docker-daemon://$DOCKER_IMAGE_NAME:$TAG
          apptainer push container.sif oras://$APPTAINER_IMAGE_NAME:$TAG
          if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Detected $TAG corresponds to a release version. Assigning image 'latest' tag"
            apptainer push container.sif oras://$APPTAINER_IMAGE_NAME:latest
          fi